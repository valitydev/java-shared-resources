<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <springProperty scope="context" name="springApplicationName" source="spring.application.name"/>
    <springProperty scope="context" name="logbackAppender" source="logback.appender" defaultValue="COLOR_CONSOLE"/>
    <springProperty scope="context" name="loggingLevelRoot" source="logging.level.root" defaultValue="INFO"/>
    <springProperty scope="context" name="loggingLevelSpringApplicationRoot" source="logging.level.spring-application-root" defaultValue="INFO"/>
    <springProperty scope="context" name="loggingLevelSpringApplicationWoody" source="logging.level.spring-application-woody" defaultValue="INFO"/>
    <springProperty scope="context" name="loggerNameSpringApplicationRoot" source="logger.name.spring-application-root" defaultValue="dev.vality"/>
    <springProperty scope="context" name="loggerNameSpringApplicationWoody" source="logger.name.spring-application-woody" defaultValue="dev.vality.woody"/>
    <springProperty scope="context" name="loggerPatternSpringApplicationJsonK8sConsole" source="logging.pattern.spring-application-json-k8s-console" defaultValue="{&quot;@timestamp&quot;: &quot;%date{yyy-MM-dd'T'HH:mm:ss.SSSXXX, UTC}&quot;,&quot;@severity&quot;: &quot;%level&quot;,&quot;thread_name&quot;: &quot;%thread&quot;,&quot;application&quot;: &quot;${springApplicationName}&quot;,&quot;logger_name&quot;: &quot;%logger&quot;,&quot;method&quot;: &quot;%method&quot;,&quot;line&quot;: &quot;%line&quot;,&quot;message&quot;: &quot;%message&quot;}"/>

    <appender name="DEFAULT_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>${CONSOLE_LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <appender name="COLOR_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                %black(%d{ISO8601}) [%blue(%t)] %magenta(${PID:- }) %highlight(%-5level) %cyan(%logger{36}).%yellow(%M):%white(%L) â€” %m%n%wEx
            </Pattern>
        </layout>
    </appender>

    <appender name="JSON_K8S_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <mdc/>
                <pattern>
                    <pattern>${loggerPatternSpringApplicationJsonK8sConsole}</pattern>
                </pattern>
                <stackTrace>
                    <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                        <maxDepthPerThrowable>30</maxDepthPerThrowable>
                        <maxLength>2048</maxLength>
                        <shortenedClassNameLength>20</shortenedClassNameLength>
                        <exclude>^sun\.reflect\..*\.invoke</exclude>
                        <exclude>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
                        <rootCauseFirst>true</rootCauseFirst>
                    </throwableConverter>
                </stackTrace>
            </providers>
        </encoder>
    </appender>

    <root level="${loggingLevelRoot}">
        <if condition='"${logbackAppender}".equals("COLOR_CONSOLE")'>
            <then>
                <appender-ref ref="COLOR_CONSOLE"/>
            </then>
            <else>
                <if condition='"${logbackAppender}".equals("JSON_K8S_CONSOLE")'>
                    <then>
                        <appender-ref ref="JSON_K8S_CONSOLE"/>
                    </then>
                    <else>
                        <appender-ref ref="DEFAULT_CONSOLE"/>
                    </else>
                </if>
            </else>
        </if>
    </root>

    <logger name="${loggerNameSpringApplicationRoot}" level="${loggingLevelSpringApplicationRoot}"/>
    <logger name="${loggerNameSpringApplicationWoody}" level="${loggingLevelSpringApplicationWoody}"/>

    <jmxConfigurator/>
</configuration>
